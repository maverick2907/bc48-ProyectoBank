openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MVALENZDELVI/api-account/1.0.0
info:
  title: Account Microservice
  description: Account Microservice
  version: 1.0.0
paths:
  /account:
    post:
      tags:
        - Account
      summary: Add a new Account to the database
      description: Add a new Account to the database
      operationId: addAccount
      requestBody:
        description: Create a new Account in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "405":
          description: Invalid input
    get:
      tags:
        - Account
      summary: Find Accounts
      description: Returns a all Accounts
      operationId: getAccounts
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        "404":
          description: Invalid status value
  /account/{id}:
    put:
      tags:
        - Account
      summary: Update an existing Account
      description: Update an existing Account by Id
      operationId: updateAccount
      parameters:
        - name: id
          in: path
          description: ID of Account to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Account in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Invalid ID supplied
        "404":
          description: Account not found
        "405":
          description: Validation exception
    get:
      tags:
        - Account
      summary: Find Account by ID
      description: Returns a single Account
      operationId: findAccountById
      parameters:
        - name: id
          in: path
          description: ID of Account to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Invalid ID supplied
        "404":
          description: Account not found
    delete:
      tags:
        - Account
      summary: Delete a Account
      description: delete a Account
      operationId: deleteAccountById
      parameters:
        - name: id
          in: path
          description: Account id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid Account value
components:
  schemas:
    Account:
      required:
        - accountNumber
        - cci
        - productId
        - titularId
        - status
        - availableBalance
      type: object
      properties:
        id:
          type: string
          readOnly: true
        accountNumber:
          type: string
          minimum: 13
          maximum: 16
          description: Account Number
          example: 193-1315179-0-35
        cci:
          type: string
          minimum: 20
          maximum: 22
          description: CCI
          example: 002-193-00131517903512
        productId:
          type: string
          description: Product ID
          example: 6386e2cc35049a3f6bfcfd7b
        titularId:
          type: array
          items:
            type: string
            description: Titular
            example: 63859d334306d301128cf352
        signatoryId:
          type: array
          items:
            type: string
            description: Signatory
            example: 63859d334306d301128cf352
        status:
          type: string
          description: Status
          enum:
            - Activa
            - Inactiva
            - Bloqueada
        availableBalance:
          type: number
          format: currency
          description: Balance Amount
          example: 1000.00
        retainedBalance:
          type: number
          format: currency
          description: Balance Amount
          example: 10.00
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2023-12-10T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2023-12-10T20:30:00Z"
          readOnly: true
  requestBodies:
    Account:
      description: Account object that needs to be added to the database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Account'