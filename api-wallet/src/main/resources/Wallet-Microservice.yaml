openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MVALENZDELVI/api-wallet/1.0.0
info:
  title: Wallet Microservice
  description: Wallet Microservice
  version: 1.0.0
paths:
  /wallet:
    post:
      tags:
        - wallet
      summary: Add a new Wallet to the database
      description: Add a new Wallet to the database
      operationId: save
      requestBody:
        description: Create a new Wallet in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "405":
          description: Invalid input
    get:
      tags:
        - wallet
      summary: Find Wallets
      description: Returns a all Wallets
      operationId: findAll
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wallet'
        "404":
          description: Invalid status value
  /wallet/{id}:
    put:
      tags:
        - wallet
      summary: Update an existing Wallet
      description: Update an existing Wallet by Id
      operationId: update
      parameters:
        - name: id
          in: path
          description: ID of Wallet to update
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent Wallet in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Invalid ID supplied
        "404":
          description: Wallet not found
        "405":
          description: Validation exception
    get:
      tags:
        - wallet
      summary: Find Wallet by ID
      description: Returns a single Wallet
      operationId: findById
      parameters:
        - name: id
          in: path
          description: ID of Wallet to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Invalid ID supplied
        "404":
          description: Wallet not found
    delete:
      tags:
        - wallet
      summary: Delete a Wallet
      description: delete a Wallet
      operationId: delete
      parameters:
        - name: id
          in: path
          description: Wallet id to delete
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "400":
          description: Invalid Wallet value
  /wallet/customer/{customer}:
    get:
      tags:
        - wallet
      summary: Find wallet by customer
      description: Returns a single wallet
      operationId: findByCustomer
      parameters:
        - name: customer
          in: path
          description: customer of wallet to return
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Invalid wallet supplied
        "404":
          description: Wallet not found
components:
  schemas:
    Coin:
      required:
        - coinType
      type: object
      properties:
        coinType:
          type: string
          description: Coin Type
          enum:
            - Soles
            - BootCoin
        availableAmount:
          type: number
          format: currency
          description: Available Amount
          example: 10.00
    Wallet:
      required:
        - status
        - customerId
        - coin
      type: object
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          description: Status
          enum:
            - Activo
            - Pendiente
            - Bloqueado
        cardId:
          type: string
          description: Debit Card ID
        customerId:
          type: string
          description: Customer ID
        description:
          type: string
          description: Description
          example: cuentas bancarias
        coin:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        createdAt:
          type: string
          format: date-time
          description: Creation date
          example: "2023-12-10T20:30:00Z"
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: Updated date
          example: "2023-12-15T20:30:00Z"
          readOnly: true
  requestBodies:
    wallet:
      description: Wallet object that needs to be added to the database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Wallet'